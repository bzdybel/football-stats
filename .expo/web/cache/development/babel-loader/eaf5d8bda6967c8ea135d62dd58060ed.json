{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport var useLogin = function useLogin() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      errors = _React$useState6[0],\n      setErrors = _React$useState6[1];\n\n  var submit = function submit() {\n    var nextErrors = {};\n\n    if (email.length === 0) {\n      nextErrors.email = 'This field is required.';\n    }\n\n    if (password.length === 0) {\n      nextErrors.password = 'This field is required.';\n    }\n\n    setErrors(nextErrors);\n\n    if (Object.keys(nextErrors).length > 0) {\n      return null;\n    }\n\n    Alert.alert('Success!', \"Email: \" + email + \" \\n Password: \" + password);\n    return null;\n  };\n\n  return {\n    submit: submit,\n    errors: errors,\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword\n  };\n};","map":{"version":3,"sources":["/Users/bzdybel/Documents/football-stats/src/util/auth.ts"],"names":["React","useLogin","useState","email","setEmail","password","setPassword","errors","setErrors","submit","nextErrors","length","Object","keys","Alert","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAgD,OAAhD;;AAQA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,wBAA0BD,KAAK,CAACE,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAAgCJ,KAAK,CAACE,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAGIN,KAAK,CAACE,QAAN,CAAe,EAAf,CAHJ;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AAKA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAMC,UAAqB,GAAG,EAA9B;;AACA,QAAIP,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB;AACtBD,MAAAA,UAAU,CAACP,KAAX,GAAmB,yBAAnB;AACD;;AACD,QAAIE,QAAQ,CAACM,MAAT,KAAoB,CAAxB,EAA2B;AACzBD,MAAAA,UAAU,CAACL,QAAX,GAAsB,yBAAtB;AACD;;AACDG,IAAAA,SAAS,CAACE,UAAD,CAAT;;AAEA,QAAIE,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACtC,aAAO,IAAP;AACD;;AAEDG,IAAAA,KAAK,CAACC,KAAN,CAAY,UAAZ,cAAkCZ,KAAlC,sBAAwDE,QAAxD;AACA,WAAO,IAAP;AACD,GAhBD;;AAkBA,SAAO;AACLI,IAAAA,MAAM,EAANA,MADK;AAELF,IAAAA,MAAM,EAANA,MAFK;AAGLJ,IAAAA,KAAK,EAALA,KAHK;AAILC,IAAAA,QAAQ,EAARA,QAJK;AAKLC,IAAAA,QAAQ,EAARA,QALK;AAMLC,IAAAA,WAAW,EAAXA;AANK,GAAP;AAQD,CAlCM","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { Alert } from 'react-native';\n\ntype ErrorType = {\n  email?: string;\n  password?: string;\n};\n\nexport const useLogin = () => {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [errors, setErrors]: [\n    ErrorType,\n    Dispatch<SetStateAction<{}>>,\n  ] = React.useState({});\n\n  const submit = () => {\n    const nextErrors: ErrorType = {};\n    if (email.length === 0) {\n      nextErrors.email = 'This field is required.';\n    }\n    if (password.length === 0) {\n      nextErrors.password = 'This field is required.';\n    }\n    setErrors(nextErrors);\n\n    if (Object.keys(nextErrors).length > 0) {\n      return null;\n    }\n\n    Alert.alert('Success!', `Email: ${email} \\n Password: ${password}`);\n    return null;\n  };\n\n  return {\n    submit,\n    errors,\n    email,\n    setEmail,\n    password,\n    setPassword,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}