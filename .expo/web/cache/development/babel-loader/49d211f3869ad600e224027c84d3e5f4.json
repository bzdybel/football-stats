{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text } from \"./Text\";\nimport colors from \"../constants/colors\";\nvar styles = StyleSheet.create({\n  row: {\n    flex: '1',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: colors.white\n  },\n  titleText: {\n    fontWeight: 'bold'\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: colors.border\n  },\n  image: {\n    height: 100,\n    width: 100,\n    marginRight: 15\n  }\n});\nexport var ListItem = function ListItem(_ref) {\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {\n    return null;\n  } : _ref$onPress,\n      image = _ref.image;\n  var rowStyles = [styles.row];\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress\n  }, React.createElement(View, {\n    style: rowStyles\n  }, React.createElement(Image, {\n    style: [styles.image],\n    source: image.light\n  }), React.createElement(View, null, React.createElement(Text, {\n    style: [styles.titleText]\n  }, title), React.createElement(Text, null, subtitle))));\n};\nexport var ListSeparator = function ListSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};","map":{"version":3,"sources":["/Users/bzdybel/Documents/football-stats/src/components/List.tsx"],"names":["React","Text","colors","styles","StyleSheet","create","row","flex","flexDirection","alignItems","paddingHorizontal","paddingVertical","backgroundColor","white","titleText","fontWeight","separator","height","hairlineWidth","border","image","width","marginRight","ListItem","title","subtitle","onPress","rowStyles","light","ListSeparator"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,SAASC,IAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,IAAI,EAAE,GADH;AAEHC,IAAAA,aAAa,EAAE,KAFZ;AAGHC,IAAAA,UAAU,EAAE,QAHT;AAIHC,IAAAA,iBAAiB,EAAE,EAJhB;AAKHC,IAAAA,eAAe,EAAE,EALd;AAMHC,IAAAA,eAAe,EAAEV,MAAM,CAACW;AANrB,GAD0B;AAS/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GAToB;AAY/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAEb,UAAU,CAACc,aADV;AAETN,IAAAA,eAAe,EAAEV,MAAM,CAACiB;AAFf,GAZoB;AAgB/BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAE,GADH;AAELI,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,WAAW,EAAE;AAHR;AAhBwB,CAAlB,CAAf;AA8BA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAKH;AAAA,MAJnBC,KAImB,QAJnBA,KAImB;AAAA,MAHnBC,QAGmB,QAHnBA,QAGmB;AAAA,0BAFnBC,OAEmB;AAAA,MAFnBA,OAEmB,6BAFT;AAAA,WAAM,IAAN;AAAA,GAES;AAAA,MADnBN,KACmB,QADnBA,KACmB;AACnB,MAAMO,SAAS,GAAG,CAACxB,MAAM,CAACG,GAAR,CAAlB;AAEA,SACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEoB;AAA3B,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC;AAAb,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAACxB,MAAM,CAACiB,KAAR,CAAd;AAA8B,IAAA,MAAM,EAAEA,KAAK,CAACQ;AAA5C,IADF,EAEE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACzB,MAAM,CAACW,SAAR;AAAb,KAAkCU,KAAlC,CADF,EAEE,oBAAC,IAAD,QAAOC,QAAP,CAFF,CAFF,CADF,CADF;AAWD,CAnBM;AAqBP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAACa;AAApB,IAAN;AAAA,CAAtB","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, TouchableOpacity, Image } from 'react-native';\n\nimport { Text } from './Text';\nimport colors from '../constants/colors';\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: '1',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: colors.white,\n  },\n  titleText: {\n    fontWeight: 'bold',\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: colors.border,\n  },\n  image: {\n    height: 100,\n    width: 100,\n    marginRight: 15,\n  },\n});\n\ntype ListItemProps = {\n  title: string;\n  subtitle: string;\n  onPress: () => void;\n  image: { light: string; dark: string };\n};\n\nexport const ListItem = ({\n  title,\n  subtitle,\n  onPress = () => null,\n  image,\n}: ListItemProps) => {\n  const rowStyles = [styles.row];\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={rowStyles}>\n        <Image style={[styles.image]} source={image.light} />\n        <View>\n          <Text style={[styles.titleText]}>{title}</Text>\n          <Text>{subtitle}</Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport const ListSeparator = () => <View style={styles.separator} />;\n"]},"metadata":{},"sourceType":"module"}