{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo, useState, useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport colors from \"../constants/colors\";\nimport { ListItem, ListSeparator } from \"../components/List\";\nimport { SHOW_FAVOURITES, SHOW_ALL } from \"../store/constants/actionTypes\";\nexport var List = function List(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.general;\n  }),\n      leagues = _useSelector.leagues,\n      originalLeagues = _useSelector.originalLeagues;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterValue = _useState4[0],\n      onFilterChange = _useState4[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    isEnabled ? dispatch({\n      type: SHOW_FAVOURITES\n    }) : dispatch({\n      type: SHOW_ALL\n    });\n    setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var _onChangeText = useCallback(function (text) {\n    console.log(text);\n    onFilterChange(text);\n\n    var leaguesCopy = _toConsumableArray(leagues).filter(function (e) {\n      return e.name.toLowerCase().includes(text.toLowerCase()) || e.abbr.toLowerCase().includes(text.toLowerCase());\n    });\n\n    console.log(leaguesCopy);\n  }, []);\n\n  var screens = useMemo(function () {\n    return leagues.map(function (e) {\n      return {\n        title: e.name,\n        subtitle: e.abbr,\n        target: e.slug,\n        image: e.logos,\n        id: e.id\n      };\n    });\n  }, [leagues]);\n  return React.createElement(FlatList, {\n    style: styles.container,\n    data: screens,\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subtitle: item.subtitle,\n        image: item.image,\n        onPress: function onPress() {\n          return navigation.navigate(item.target);\n        },\n        id: item.id\n      });\n    },\n    ItemSeparatorComponent: ListSeparator,\n    ListHeaderComponent: React.createElement(View, {\n      style: [styles.row]\n    }, React.createElement(TouchableHighlight, {\n      activeOpacity: 0.6,\n      underlayColor: \"#800080\",\n      style: [styles.button, isEnabled ? styles.enabled : styles.disabled],\n      onPress: toggleSwitch\n    }, React.createElement(Text, {\n      style: [styles.text, isEnabled ? styles.enabledText : styles.disabledText]\n    }, \"Show favourites\")), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(e) {\n        return _onChangeText(e);\n      },\n      value: filterValue\n    })),\n    ListFooterComponent: ListSeparator\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    borderRadius: 20,\n    elevation: 3,\n    border: \"2px solid #800080\",\n    marginLeft: 15,\n    width: 200\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25\n  },\n  enabled: {\n    backgroundColor: \"#800080\"\n  },\n  disabled: {\n    backgroundColor: \"transparent\"\n  },\n  enabledText: {\n    color: \"white\"\n  },\n  disabledText: {\n    color: \"black\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/bzdybel/Documents/Projekty/football-stats/src/screens/List.tsx"],"names":["React","useMemo","useState","useCallback","useSelector","useDispatch","colors","ListItem","ListSeparator","SHOW_FAVOURITES","SHOW_ALL","List","navigation","dispatch","state","general","leagues","originalLeagues","isEnabled","setIsEnabled","filterValue","onFilterChange","toggleSwitch","type","previousState","onChangeText","text","console","log","leaguesCopy","filter","e","name","toLowerCase","includes","abbr","screens","map","title","subtitle","target","slug","image","logos","id","styles","container","item","navigate","row","button","enabled","disabled","enabledText","disabledText","input","StyleSheet","create","flex","backgroundColor","background","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","border","marginLeft","width","fontSize","lineHeight","fontWeight","letterSpacing","color","height","margin","borderWidth","padding","flexDirection"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useCallback } from \"react\";\nimport {\n    StyleSheet,\n    FlatList,\n    TouchableHighlight,\n    Text,\n    TextInput,\n    View,\n} from \"react-native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport colors from \"../constants/colors\";\nimport { ListItem, ListSeparator } from \"../components/List\";\nimport { MainStackParams } from \"../navigation/Main\";\nimport { LeagueType } from \"../store/reducers/general\";\nimport {\n    SHOW_FAVOURITES,\n    SHOW_ALL,\n    SET_LEAGUES,\n} from \"../store/constants/actionTypes\";\n\ntype Props = {\n    navigation: StackNavigationProp<MainStackParams, \"Leagues\">;\n};\n\nexport const List = ({ navigation }: Props) => {\n    const dispatch = useDispatch();\n    const { leagues, originalLeagues } = useSelector(\n        (state: any) => state.general\n    );\n\n    const [isEnabled, setIsEnabled] = useState<boolean>(false);\n    const [filterValue, onFilterChange] = useState<string>(\"\");\n\n    const toggleSwitch = () => {\n        isEnabled\n            ? dispatch({ type: SHOW_FAVOURITES })\n            : dispatch({ type: SHOW_ALL });\n        setIsEnabled((previousState) => !previousState);\n    };\n    const onChangeText = useCallback((text: string) => {\n        console.log(text);\n        onFilterChange(text);\n        const leaguesCopy = [...leagues]\n        .filter(\n            (e: LeagueType) =>\n                e.name.toLowerCase().includes(text.toLowerCase()) ||\n                e.abbr.toLowerCase().includes(text.toLowerCase())\n        );\n        console.log(leaguesCopy);\n        // dispatch({\n        //     type: SET_LEAGUES,\n        //     payload: text.length > 3 ? leaguesCopy : originalLeagues,\n        // });\n    }, []);\n    // const onChangeText = (text: string) => {\n    //     onFilterChange(text);\n    //     const leaguesCopy = [...leagues].filter(\n    //         (e: LeagueType) => e.name.includes(text) || e.abbr.includes(text)\n    //     );\n    //     dispatch({\n    //         type: SET_LEAGUES,\n    //         payload: text.length > 3 ? leaguesCopy : originalLeagues,\n    //     });\n    // };\n\n    const screens = useMemo(\n        () =>\n            leagues.map((e: LeagueType) => {\n                return {\n                    title: e.name,\n                    subtitle: e.abbr,\n                    target: e.slug,\n                    image: e.logos,\n                    id: e.id,\n                };\n            }),\n        [leagues]\n    );\n\n    return (\n        <FlatList\n            style={styles.container}\n            data={screens}\n            keyExtractor={(item) => item.title}\n            renderItem={({ item }) => (\n                <ListItem\n                    title={item.title}\n                    subtitle={item.subtitle}\n                    image={item.image}\n                    onPress={() => navigation.navigate(item.target)}\n                    id={item.id}\n                />\n            )}\n            ItemSeparatorComponent={ListSeparator}\n            ListHeaderComponent={\n                <View style={[styles.row]}>\n                    <TouchableHighlight\n                        activeOpacity={0.6}\n                        underlayColor=\"#800080\"\n                        style={[\n                            styles.button,\n                            isEnabled ? styles.enabled : styles.disabled,\n                        ]}\n                        onPress={toggleSwitch}\n                    >\n                        <Text\n                            style={[\n                                styles.text,\n                                isEnabled\n                                    ? styles.enabledText\n                                    : styles.disabledText,\n                            ]}\n                        >\n                            {\"Show favourites\"}\n                        </Text>\n                    </TouchableHighlight>\n                    <TextInput\n                        style={styles.input}\n                        onChangeText={(e) => onChangeText(e)}\n                        value={filterValue}\n                    />\n                </View>\n            }\n            ListFooterComponent={ListSeparator}\n        />\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: colors.background,\n    },\n    button: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        paddingVertical: 5,\n        paddingHorizontal: 10,\n        borderRadius: 20,\n        elevation: 3,\n        border: \"2px solid #800080\",\n        marginLeft: 15,\n        width: 200,\n        // marginBottom: 15,\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: \"bold\",\n        letterSpacing: 0.25,\n    },\n    enabled: {\n        backgroundColor: \"#800080\",\n    },\n    disabled: {\n        backgroundColor: \"transparent\",\n    },\n    enabledText: {\n        color: \"white\",\n    },\n    disabledText: {\n        color: \"black\",\n    },\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n});\n"]},"metadata":{},"sourceType":"module"}