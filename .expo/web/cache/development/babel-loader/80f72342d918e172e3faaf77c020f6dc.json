{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"errorText\"];\nimport React from 'react';\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"./Text\";\nimport colors from \"../constants/colors\";\nvar styles = StyleSheet.create({\n  inputContainer: {\n    marginBottom: 20\n  },\n  labelText: {\n    color: colors.gray,\n    fontSize: 18,\n    marginBottom: 10\n  },\n  textInput: {\n    fontSize: 14,\n    fontWeight: '500',\n    paddingBottom: 10\n  },\n  border: {\n    height: 1,\n    backgroundColor: colors.border\n  },\n  borderError: {\n    backgroundColor: colors.error\n  },\n  errorText: {\n    marginTop: 5,\n    color: colors.error\n  }\n});\nexport var TextInput = function TextInput(_ref) {\n  var label = _ref.label,\n      _ref$errorText = _ref.errorText,\n      errorText = _ref$errorText === void 0 ? '' : _ref$errorText,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var borderStyles = [styles.border];\n\n  if (errorText && errorText.length > 0) {\n    borderStyles.push(styles.borderError);\n  }\n\n  return React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(Text, {\n    style: [styles.labelText]\n  }, label), React.createElement(RNTextInput, _extends({\n    style: styles.textInput\n  }, rest)), React.createElement(View, {\n    style: borderStyles\n  }), React.createElement(Text, {\n    style: [styles.errorText]\n  }, errorText));\n};","map":{"version":3,"sources":["/Users/bzdybel/Documents/football-stats/src/components/Form.tsx"],"names":["React","Text","colors","styles","StyleSheet","create","inputContainer","marginBottom","labelText","color","gray","fontSize","textInput","fontWeight","paddingBottom","border","height","backgroundColor","borderError","error","errorText","marginTop","TextInput","label","rest","borderStyles","length","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAUA,SAASC,IAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,YAAY,EAAE;AADA,GADe;AAI/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAEP,MAAM,CAACQ,IADL;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTJ,IAAAA,YAAY,EAAE;AAHL,GAJoB;AAS/BK,EAAAA,SAAS,EAAE;AACTD,IAAAA,QAAQ,EAAE,EADD;AAETE,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,aAAa,EAAE;AAHN,GAToB;AAc/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,CADF;AAENC,IAAAA,eAAe,EAAEf,MAAM,CAACa;AAFlB,GAduB;AAkB/BG,EAAAA,WAAW,EAAE;AACXD,IAAAA,eAAe,EAAEf,MAAM,CAACiB;AADb,GAlBkB;AAqB/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,CADF;AAETZ,IAAAA,KAAK,EAAEP,MAAM,CAACiB;AAFL;AArBoB,CAAlB,CAAf;AAgCA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,OAIH;AAAA,MAHpBC,KAGoB,QAHpBA,KAGoB;AAAA,4BAFpBH,SAEoB;AAAA,MAFpBA,SAEoB,+BAFR,EAEQ;AAAA,MADjBI,IACiB;;AACpB,MAAMC,YAAkC,GAAG,CAACtB,MAAM,CAACY,MAAR,CAA3C;;AAEA,MAAIK,SAAS,IAAIA,SAAS,CAACM,MAAV,GAAmB,CAApC,EAAuC;AACrCD,IAAAA,YAAY,CAACE,IAAb,CAAkBxB,MAAM,CAACe,WAAzB;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACG;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACK,SAAR;AAAb,KAAkCe,KAAlC,CADF,EAEE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEpB,MAAM,CAACS;AAA3B,KAA0CY,IAA1C,EAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC;AAAb,IAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACtB,MAAM,CAACiB,SAAR;AAAb,KAAkCA,SAAlC,CAJF,CADF;AAQD,CAnBM","sourcesContent":["import React from 'react';\nimport {\n  TextInput as RNTextInput,\n  StyleSheet,\n  View,\n  StyleProp,\n  ViewStyle,\n  TextInputProps as RNTextInputProps,\n} from 'react-native';\n\nimport { Text } from './Text';\nimport colors from '../constants/colors';\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    marginBottom: 20,\n  },\n  labelText: {\n    color: colors.gray,\n    fontSize: 18,\n    marginBottom: 10,\n  },\n  textInput: {\n    fontSize: 14,\n    fontWeight: '500',\n    paddingBottom: 10,\n  },\n  border: {\n    height: 1,\n    backgroundColor: colors.border,\n  },\n  borderError: {\n    backgroundColor: colors.error,\n  },\n  errorText: {\n    marginTop: 5,\n    color: colors.error,\n  },\n});\n\ninterface TextInputProps extends RNTextInputProps {\n  label: string;\n  errorText?: string;\n}\n\nexport const TextInput = ({\n  label,\n  errorText = '',\n  ...rest\n}: TextInputProps) => {\n  const borderStyles: StyleProp<ViewStyle> = [styles.border];\n\n  if (errorText && errorText.length > 0) {\n    borderStyles.push(styles.borderError);\n  }\n\n  return (\n    <View style={styles.inputContainer}>\n      <Text style={[styles.labelText]}>{label}</Text>\n      <RNTextInput style={styles.textInput} {...rest} />\n      <View style={borderStyles} />\n      <Text style={[styles.errorText]}>{errorText}</Text>\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}