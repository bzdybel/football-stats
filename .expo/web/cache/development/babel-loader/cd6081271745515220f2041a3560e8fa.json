{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport colors from \"../constants/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { Text } from \"./Text\";\nvar styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: colors.white\n  },\n  titleText: {\n    fontWeight: \"bold\"\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: colors.border\n  },\n  image: {\n    height: 50,\n    width: 50,\n    marginRight: 15\n  },\n  wrapper: {\n    minWidth: 300\n  }\n});\nexport var ListItem = function ListItem(_ref) {\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {\n    return null;\n  } : _ref$onPress,\n      image = _ref.image,\n      id = _ref.id;\n  var dispatch = useDispatch();\n  var rowStyles = [styles.row];\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress\n  }, React.createElement(View, {\n    style: rowStyles\n  }, React.createElement(Image, {\n    style: [styles.image],\n    source: {\n      uri: image.light\n    }\n  }), React.createElement(View, {\n    style: [styles.wrapper]\n  }, React.createElement(Text, {\n    style: [styles.titleText]\n  }, title), React.createElement(Text, null, subtitle))));\n};\nexport var ListSeparator = function ListSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};","map":{"version":3,"sources":["/Users/bzdybel/Documents/Projekty/football-stats/src/components/List.tsx"],"names":["React","colors","useDispatch","Text","styles","StyleSheet","create","row","flex","flexDirection","alignItems","paddingHorizontal","paddingVertical","backgroundColor","white","titleText","fontWeight","separator","height","hairlineWidth","border","image","width","marginRight","wrapper","minWidth","ListItem","title","subtitle","onPress","id","dispatch","rowStyles","uri","light","ListSeparator"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;;;;;AAGA,OAAOC,MAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,IAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAE,CADL;AAEDC,IAAAA,aAAa,EAAE,KAFd;AAGDC,IAAAA,UAAU,EAAE,QAHX;AAIDC,IAAAA,iBAAiB,EAAE,EAJlB;AAKDC,IAAAA,eAAe,EAAE,EALhB;AAMDC,IAAAA,eAAe,EAAEZ,MAAM,CAACa;AANvB,GADwB;AAS7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL,GATkB;AAY7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAEb,UAAU,CAACc,aADZ;AAEPN,IAAAA,eAAe,EAAEZ,MAAM,CAACmB;AAFjB,GAZkB;AAgB7BC,EAAAA,KAAK,EAAE;AACHH,IAAAA,MAAM,EAAE,EADL;AAEHI,IAAAA,KAAK,EAAE,EAFJ;AAGHC,IAAAA,WAAW,EAAE;AAHV,GAhBsB;AAqB7BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AArBoB,CAAlB,CAAf;AAiCA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAOH;AAAA,MANjBC,KAMiB,QANjBA,KAMiB;AAAA,MALjBC,QAKiB,QALjBA,QAKiB;AAAA,0BAJjBC,OAIiB;AAAA,MAJjBA,OAIiB,6BAJP;AAAA,WAAM,IAAN;AAAA,GAIO;AAAA,MAHjBR,KAGiB,QAHjBA,KAGiB;AAAA,MAFjBS,EAEiB,QAFjBA,EAEiB;AACjB,MAAMC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,MAAM8B,SAAS,GAAG,CAAC5B,MAAM,CAACG,GAAR,CAAlB;AAQA,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEsB;AAA3B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG;AAAb,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAC5B,MAAM,CAACiB,KAAR,CAAd;AAA8B,IAAA,MAAM,EAAE;AAAEY,MAAAA,GAAG,EAAEZ,KAAK,CAACa;AAAb;AAAtC,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC9B,MAAM,CAACoB,OAAR;AAAb,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACpB,MAAM,CAACW,SAAR;AAAb,KAAkCY,KAAlC,CADJ,EAEI,oBAAC,IAAD,QAAOC,QAAP,CAFJ,CAFJ,CADJ,CADJ;AAYH,CA7BM;AA+BP,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACa;AAApB,IAAN;AAAA,CAAtB","sourcesContent":["import React, { useCallback } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, Image } from \"react-native\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../constants/colors\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_LEAGUE_TO_FAVOURITE } from \"../store/constants/actionTypes\";\nimport { Text } from \"./Text\";\n\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        backgroundColor: colors.white,\n    },\n    titleText: {\n        fontWeight: \"bold\",\n    },\n    separator: {\n        height: StyleSheet.hairlineWidth,\n        backgroundColor: colors.border,\n    },\n    image: {\n        height: 50,\n        width: 50,\n        marginRight: 15,\n    },\n    wrapper: {\n        minWidth: 300,\n    },\n});\n\ntype ListItemProps = {\n    title: string;\n    subtitle: string;\n    onPress: () => void;\n    image: { light: string; dark: string };\n};\n\nexport const ListItem = ({\n    title,\n    subtitle,\n    onPress = () => null,\n    image,\n    id\n    \n}: ListItemProps) => {\n    const dispatch = useDispatch();\n    const rowStyles = [styles.row];\n    // const addToFavourites = useCallback(\n    //   () => {\n    //     dispatch({type: ADD_LEAGUE_TO_FAVOURITE, payload: })\n    //   },\n    //   [],\n    // )\n\n    return (\n        <TouchableOpacity onPress={onPress}>\n            <View style={rowStyles}>\n                <Image style={[styles.image]} source={{ uri: image.light }} />\n                <View style={[styles.wrapper]}>\n                    <Text style={[styles.titleText]}>{title}</Text>\n                    <Text>{subtitle}</Text>\n                </View>\n                {/* <Ionicons onPress={addToFavourites} name=\"heart-outline\" size={24} color=\"#606060\" /> */}\n            </View>\n        </TouchableOpacity>\n    );\n};\n\nexport const ListSeparator = () => <View style={styles.separator} />;\n"]},"metadata":{},"sourceType":"module"}