{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_ALL_LEAGUES_INFORMATION, ADD_LEAGUE_TO_FAVOURITE, REMOVE_LEAGUE_FROM_FAVOURITE, SHOW_FAVOURITES } from \"../constants/actionTypes\";\nexport var initialState = {\n  originalLeageus: [],\n  leagues: [],\n  favouriteLeagues: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_LEAGUES_INFORMATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        leagues: action.payload.data,\n        originalLeagues: originalLeagues\n      });\n\n    case ADD_LEAGUE_TO_FAVOURITE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favouriteLeagues: [].concat(_toConsumableArray(state.favouriteLeagues), [state.leagues.find(function (e) {\n          return e.id === action.payload.id;\n        })])\n      });\n\n    case REMOVE_LEAGUE_FROM_FAVOURITE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favouriteLeagues: _toConsumableArray(state.favouriteLeagues.filter(function (e) {\n          return e.id !== action.payload.id;\n        }))\n      });\n\n    case SHOW_FAVOURITES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        leagues: _toConsumableArray(state.favouriteLeagues)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/bzdybel/Documents/Projekty/football-stats/src/store/reducers/general.ts"],"names":["GET_ALL_LEAGUES_INFORMATION","ADD_LEAGUE_TO_FAVOURITE","REMOVE_LEAGUE_FROM_FAVOURITE","SHOW_FAVOURITES","initialState","originalLeageus","leagues","favouriteLeagues","state","action","type","payload","data","originalLeagues","find","e","id","filter"],"mappings":";;;;;;;AAAA,SACIA,2BADJ,EAEIC,uBAFJ,EAGIC,4BAHJ,EAIIC,eAJJ;AAoBA,OAAO,IAAMC,YAA8B,GAAG;AAC1CC,EAAAA,eAAe,EAAE,EADyB;AAE1CC,EAAAA,OAAO,EAAE,EAFiC;AAG1CC,EAAAA,gBAAgB,EAAE;AAHwB,CAAvC;AAMP,gBAAe,YAMV;AAAA,MALDC,KAKC,uEALOJ,YAKP;AAAA,MAJDK,MAIC;;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,2BAAL;AACI,6CACOQ,KADP;AAEIF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeC,IAF5B;AAGIC,QAAAA,eAAe,EAAfA;AAHJ;;AAKJ,SAAKZ,uBAAL;AACI,6CACOO,KADP;AAEID,QAAAA,gBAAgB,+BACTC,KAAK,CAACD,gBADG,IAEZC,KAAK,CAACF,OAAN,CAAcQ,IAAd,CAAmB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACE,OAAP,CAAeK,EAA/B;AAAA,SAAnB,CAFY;AAFpB;;AAOJ,SAAKd,4BAAL;AACI,6CACOM,KADP;AAEID,QAAAA,gBAAgB,qBACTC,KAAK,CAACD,gBAAN,CAAuBU,MAAvB,CACC,UAACF,CAAD;AAAA,iBAAOA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACE,OAAP,CAAeK,EAA/B;AAAA,SADD,CADS;AAFpB;;AAQJ,SAAKb,eAAL;AACI,6CACOK,KADP;AAEIF,QAAAA,OAAO,qBAAME,KAAK,CAACD,gBAAZ;AAFX;;AAIJ;AACI,aAAOC,KAAP;AA9BR;AAgCH,CAvCD","sourcesContent":["import {\n    GET_ALL_LEAGUES_INFORMATION,\n    ADD_LEAGUE_TO_FAVOURITE,\n    REMOVE_LEAGUE_FROM_FAVOURITE,\n    SHOW_FAVOURITES,\n} from \"../constants/actionTypes\";\n\nexport type LeagueType = {\n    abbr: string;\n    id: string;\n    logos: { light: string; dark: string };\n    name: string;\n    slug: string;\n};\nexport interface GeneralStateType {\n    originalLeagues: LeagueType[];\n    leagues: LeagueType[];\n    favouriteLeagues: LeagueType[];\n}\n\nexport const initialState: GeneralStateType = {\n    originalLeageus: [],\n    leagues: [],\n    favouriteLeagues: [],\n};\n\nexport default (\n    state = initialState,\n    action: {\n        type: string;\n        payload: any;\n    }\n) => {\n    switch (action.type) {\n        case GET_ALL_LEAGUES_INFORMATION:\n            return {\n                ...state,\n                leagues: action.payload.data,\n                originalLeagues\n            };\n        case ADD_LEAGUE_TO_FAVOURITE:\n            return {\n                ...state,\n                favouriteLeagues: [\n                    ...state.favouriteLeagues,\n                    state.leagues.find((e) => e.id === action.payload.id),\n                ],\n            };\n        case REMOVE_LEAGUE_FROM_FAVOURITE:\n            return {\n                ...state,\n                favouriteLeagues: [\n                    ...state.favouriteLeagues.filter(\n                        (e) => e.id !== action.payload.id\n                    ),\n                ],\n            };\n        case SHOW_FAVOURITES:\n            return {\n                ...state,\n                leagues: [...state.favouriteLeagues],\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}