{"ast":null,"code":"import React, { useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../constants/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_LEAGUE_TO_FAVOURITE } from \"../store/constants/actionTypes\";\nimport { Text } from \"./Text\";\nvar styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: colors.white\n  },\n  titleText: {\n    fontWeight: \"bold\"\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: colors.border\n  },\n  image: {\n    height: 50,\n    width: 50,\n    marginRight: 15\n  },\n  wrapper: {\n    minWidth: 300\n  }\n});\nexport var ListItem = function ListItem(_ref) {\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {\n    return null;\n  } : _ref$onPress,\n      image = _ref.image,\n      id = _ref.id;\n  var dispatch = useDispatch();\n  var rowStyles = [styles.row];\n\n  var _useSelector = useSelector(function (state) {\n    return state.general;\n  }),\n      favouriteLeagues = _useSelector.favouriteLeagues;\n\n  var addToFavourites = useCallback(function (id) {\n    dispatch({\n      type: ADD_LEAGUE_TO_FAVOURITE,\n      payload: {\n        id: id\n      }\n    });\n  }, []);\n  var isCurrentElementFavourite = useCallback(function () {\n    return favouriteLeagues.some(function (league) {\n      return league.id === id;\n    });\n  }, [favouriteLeagues, id]);\n  console.log(favouriteLeagues);\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress\n  }, React.createElement(View, {\n    style: rowStyles\n  }, React.createElement(Image, {\n    style: [styles.image],\n    source: {\n      uri: image.light\n    }\n  }), React.createElement(View, {\n    style: [styles.wrapper]\n  }, React.createElement(Text, {\n    style: [styles.titleText]\n  }, title), React.createElement(Text, null, subtitle)), React.createElement(Ionicons, {\n    onPress: function onPress() {\n      return addToFavourites(id);\n    },\n    name: \"heart-outline\",\n    size: 24,\n    color: \"#606060\"\n  })));\n};\nexport var ListSeparator = function ListSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};","map":{"version":3,"sources":["/Users/bzdybel/Documents/Projekty/football-stats/src/components/List.tsx"],"names":["React","useCallback","Ionicons","colors","useDispatch","useSelector","ADD_LEAGUE_TO_FAVOURITE","Text","styles","StyleSheet","create","row","flex","flexDirection","alignItems","paddingHorizontal","paddingVertical","backgroundColor","white","titleText","fontWeight","separator","height","hairlineWidth","border","image","width","marginRight","wrapper","minWidth","ListItem","title","subtitle","onPress","id","dispatch","rowStyles","state","general","favouriteLeagues","addToFavourites","type","payload","isCurrentElementFavourite","some","league","console","log","uri","light","ListSeparator"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;;;;AAEA,SAAoBC,QAApB,QAAoC,oBAApC;AACA,OAAOC,MAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT;AACA,SAASC,IAAT;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAE,CADL;AAEDC,IAAAA,aAAa,EAAE,KAFd;AAGDC,IAAAA,UAAU,EAAE,QAHX;AAIDC,IAAAA,iBAAiB,EAAE,EAJlB;AAKDC,IAAAA,eAAe,EAAE,EALhB;AAMDC,IAAAA,eAAe,EAAEd,MAAM,CAACe;AANvB,GADwB;AAS7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL,GATkB;AAY7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,MAAM,EAAEb,UAAU,CAACc,aADZ;AAEPN,IAAAA,eAAe,EAAEd,MAAM,CAACqB;AAFjB,GAZkB;AAgB7BC,EAAAA,KAAK,EAAE;AACHH,IAAAA,MAAM,EAAE,EADL;AAEHI,IAAAA,KAAK,EAAE,EAFJ;AAGHC,IAAAA,WAAW,EAAE;AAHV,GAhBsB;AAqB7BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AArBoB,CAAlB,CAAf;AAkCA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAMH;AAAA,MALjBC,KAKiB,QALjBA,KAKiB;AAAA,MAJjBC,QAIiB,QAJjBA,QAIiB;AAAA,0BAHjBC,OAGiB;AAAA,MAHjBA,OAGiB,6BAHP;AAAA,WAAM,IAAN;AAAA,GAGO;AAAA,MAFjBR,KAEiB,QAFjBA,KAEiB;AAAA,MADjBS,EACiB,QADjBA,EACiB;AACjB,MAAMC,QAAQ,GAAG/B,WAAW,EAA5B;AACA,MAAMgC,SAAS,GAAG,CAAC5B,MAAM,CAACG,GAAR,CAAlB;;AACA,qBAA6BN,WAAW,CAAC,UAACgC,KAAD;AAAA,WAAgBA,KAAK,CAACC,OAAtB;AAAA,GAAD,CAAxC;AAAA,MAAQC,gBAAR,gBAAQA,gBAAR;;AAEA,MAAMC,eAAe,GAAGvC,WAAW,CAAC,UAACiC,EAAD,EAA0B;AAC1DC,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEnC,uBAAR;AAAiCoC,MAAAA,OAAO,EAAE;AAAER,QAAAA,EAAE,EAAFA;AAAF;AAA1C,KAAD,CAAR;AACH,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,MAAMS,yBAAyB,GAAG1C,WAAW,CAAC,YAAM;AAChD,WAAOsC,gBAAgB,CAACK,IAAjB,CAAsB,UAACC,MAAD;AAAA,aAAwBA,MAAM,CAACX,EAAP,KAAcA,EAAtC;AAAA,KAAtB,CAAP;AACH,GAF4C,EAE1C,CAACK,gBAAD,EAAmBL,EAAnB,CAF0C,CAA7C;AAGAY,EAAAA,OAAO,CAACC,GAAR,CAAYR,gBAAZ;AACA,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN;AAA3B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG;AAAb,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAC5B,MAAM,CAACiB,KAAR,CAAd;AAA8B,IAAA,MAAM,EAAE;AAAEuB,MAAAA,GAAG,EAAEvB,KAAK,CAACwB;AAAb;AAAtC,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACzC,MAAM,CAACoB,OAAR;AAAb,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACpB,MAAM,CAACW,SAAR;AAAb,KAAkCY,KAAlC,CADJ,EAEI,oBAAC,IAAD,QAAOC,QAAP,CAFJ,CAFJ,EAMI,oBAAC,QAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMQ,eAAe,CAACN,EAAD,CAArB;AAAA,KADb;AAEI,IAAA,IAAI,EAAC,eAFT;AAGI,IAAA,IAAI,EAAE,EAHV;AAII,IAAA,KAAK,EAAC;AAJV,IANJ,CADJ,CADJ;AAiBH,CApCM;AAsCP,OAAO,IAAMgB,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1C,MAAM,CAACa;AAApB,IAAN;AAAA,CAAtB","sourcesContent":["import React, { useCallback } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, Image } from \"react-native\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../constants/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_LEAGUE_TO_FAVOURITE } from \"../store/constants/actionTypes\";\nimport { Text } from \"./Text\";\nimport { LeagueType } from \"../store/reducers/general\";\n\nconst styles = StyleSheet.create({\n    row: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        backgroundColor: colors.white,\n    },\n    titleText: {\n        fontWeight: \"bold\",\n    },\n    separator: {\n        height: StyleSheet.hairlineWidth,\n        backgroundColor: colors.border,\n    },\n    image: {\n        height: 50,\n        width: 50,\n        marginRight: 15,\n    },\n    wrapper: {\n        minWidth: 300,\n    },\n});\n\ntype ListItemProps = {\n    title: LeagueType[\"name\"];\n    subtitle: LeagueType[\"abbr\"];\n    image: LeagueType[\"logos\"];\n    id: LeagueType[\"id\"];\n    onPress: () => void;\n};\n\nexport const ListItem = ({\n    title,\n    subtitle,\n    onPress = () => null,\n    image,\n    id,\n}: ListItemProps) => {\n    const dispatch = useDispatch();\n    const rowStyles = [styles.row];\n    const { favouriteLeagues } = useSelector((state: any) => state.general);\n\n    const addToFavourites = useCallback((id: LeagueType[\"id\"]) => {\n        dispatch({ type: ADD_LEAGUE_TO_FAVOURITE, payload: { id } });\n    }, []);\n\n    const isCurrentElementFavourite = useCallback(() => {\n        return favouriteLeagues.some((league: LeagueType) => league.id === id);\n    }, [favouriteLeagues, id]);\n    console.log(favouriteLeagues);\n    return (\n        <TouchableOpacity onPress={onPress}>\n            <View style={rowStyles}>\n                <Image style={[styles.image]} source={{ uri: image.light }} />\n                <View style={[styles.wrapper]}>\n                    <Text style={[styles.titleText]}>{title}</Text>\n                    <Text>{subtitle}</Text>\n                </View>\n                <Ionicons\n                    onPress={() => addToFavourites(id)}\n                    name=\"heart-outline\"\n                    size={24}\n                    color=\"#606060\"\n                />\n            </View>\n        </TouchableOpacity>\n    );\n};\n\nexport const ListSeparator = () => <View style={styles.separator} />;\n"]},"metadata":{},"sourceType":"module"}