{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector } from \"react-redux\";\nimport colors from \"../constants/colors\";\nimport { ListItem, ListSeparator } from \"../components/List\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background,\n    paddingVertical: 20\n  }\n});\nexport var List = function List(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    isEnabled ? dispatch({\n      type: SHOW_FAVOURITES\n    }) : dispatch({\n      type: SHOW_ALL\n    });\n    setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state.general;\n  }),\n      leagues = _useSelector.leagues;\n\n  var screens = useMemo(function () {\n    return leagues.map(function (e) {\n      return {\n        title: e.name,\n        subtitle: e.abbr,\n        target: e.slug,\n        image: e.logos,\n        id: e.id\n      };\n    });\n  }, [leagues]);\n  return React.createElement(FlatList, {\n    style: styles.container,\n    data: screens,\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subtitle: item.subtitle,\n        image: item.image,\n        onPress: function onPress() {\n          return navigation.navigate(item.target);\n        },\n        id: item.id\n      });\n    },\n    ItemSeparatorComponent: ListSeparator,\n    ListHeaderComponent: React.createElement(TouchableHighlight, {\n      activeOpacity: 0.6,\n      underlayColor: \"#800080\",\n      style: [styles.button, isEnabled ? styles.enabled : styles.disabled],\n      onPress: toggleSwitch\n    }, React.createElement(Text, {\n      style: [styles.text, isEnabled ? styles.enabledText : styles.disabledText]\n    }, \"Show favourites\")),\n    ListFooterComponent: ListSeparator\n  });\n};","map":{"version":3,"sources":["/Users/bzdybel/Documents/Projekty/football-stats/src/screens/List.tsx"],"names":["React","useState","useSelector","colors","ListItem","ListSeparator","styles","StyleSheet","create","container","flex","backgroundColor","background","paddingVertical","List","navigation","isEnabled","setIsEnabled","toggleSwitch","dispatch","type","SHOW_FAVOURITES","SHOW_ALL","previousState","state","general","leagues","screens","useMemo","map","e","title","name","subtitle","abbr","target","slug","image","logos","id","item","navigate","button","enabled","disabled","text","enabledText","disabledText"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport { StyleSheet, FlatList, TouchableHighlight, Text } from \"react-native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { useSelector } from \"react-redux\";\nimport colors from \"../constants/colors\";\nimport { ListItem, ListSeparator } from \"../components/List\";\nimport { MainStackParams } from \"../navigation/Main\";\nimport { LeagueType } from \"../store/reducers/general\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: colors.background,\n        paddingVertical: 20,\n    },\n});\n\ntype Props = {\n    navigation: StackNavigationProp<MainStackParams, \"Leagues\">;\n};\n\nexport const List = ({ navigation }: Props) => {\n    const [isEnabled, setIsEnabled] = useState(false);\n    const toggleSwitch = () => {\n        isEnabled\n            ? dispatch({ type: SHOW_FAVOURITES })\n            : dispatch({ type: SHOW_ALL });\n        setIsEnabled((previousState) => !previousState);\n    };\n\n    const { leagues } = useSelector((state: any) => state.general);\n    const screens = useMemo(\n        () =>\n            leagues.map((e: LeagueType) => {\n                return {\n                    title: e.name,\n                    subtitle: e.abbr,\n                    target: e.slug,\n                    image: e.logos,\n                    id: e.id,\n                };\n            }),\n        [leagues]\n    );\n\n    return (\n        <FlatList\n            style={styles.container}\n            data={screens}\n            keyExtractor={(item) => item.title}\n            renderItem={({ item }) => (\n                <ListItem\n                    title={item.title}\n                    subtitle={item.subtitle}\n                    image={item.image}\n                    onPress={() => navigation.navigate(item.target)}\n                    id={item.id}\n                />\n            )}\n            ItemSeparatorComponent={ListSeparator}\n            ListHeaderComponent={\n                <TouchableHighlight\n                    activeOpacity={0.6}\n                    underlayColor=\"#800080\"\n                    style={[\n                        styles.button,\n                        isEnabled ? styles.enabled : styles.disabled,\n                    ]}\n                    onPress={toggleSwitch}\n                >\n                    <Text\n                        style={[\n                            styles.text,\n                            isEnabled\n                                ? styles.enabledText\n                                : styles.disabledText,\n                        ]}\n                    >\n                        {\"Show favourites\"}\n                    </Text>\n                </TouchableHighlight>\n            }\n            ListFooterComponent={ListSeparator}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}